/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%;background:radial-gradient(ellipse at center,#f7f6f0 0,#c2ba8c 80%,#b0a66b 100%)}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{position:relative;width:100vw;height:400px;overflow:hidden}.header .header--grid-style{z-index:3;bottom:5px;right:135px;position:absolute;width:200px}.header .header--grid-style i{padding:.75rem;font-size:2rem;color:hsla(0,0%,100%,.5)}.header .header--grid-style i.selected{color:#fff}.header .header--menu{background-color:transparent;width:60vw;z-index:3;bottom:0;position:absolute;margin-left:-30vw;left:50%;color:#fff}.header .header--menu ul{margin:0;padding:0}.header .header--menu ul li{list-style-type:none;display:inline-block;text-transform:uppercase;width:18%;height:40px;text-align:center}.header .header--menu ul li.active,.header .header--menu ul li:hover{border-bottom:4px solid #0c9}.header .mind-box{background-color:rgba(52,180,147,.85);padding:5rem 4rem;margin:4rem auto;width:60vw;position:relative;left:50%;margin-left:-30vw;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around}.header .mind-box input{width:100%;border:none;outline:none;color:hsla(0,0%,100%,.7);font-size:2.5rem;padding:.5rem .2rem;border-left:1px solid #fff;background-color:transparent}.header .mind-box a{text-decoration:none}.header .mind-box a p{margin:1rem;font-size:1.5rem;color:hsla(0,0%,100%,.7)}.header .mind-box a p i{margin-right:.5rem}.header .nav{background-color:#262729;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;height:auto;z-index:2}.header .nav .logo{background-image:url(../img/logo.png);background-repeat:no-repeat;height:60px;width:150px;margin-left:5rem}.header .social-box{height:auto;margin-left:auto;width:auto;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.header .social-box .social-box--button{background-image:url(../img/social-button.png);background-repeat:no-repeat;height:60px;width:60px}.header .social-box .social-box--user-button{width:50px;height:50px;margin:1rem;background-image:url(../img/user-button.png);background-repeat:no-repeat}.header .social-box .social-box--search-wrap{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.header .social-box .social-box--search-wrap .social-box--search{outline:0;margin:15px;height:30px;padding:.25rem;color:#717580;border:1px solid #717580;background-color:#262729}.header .social-box .social-box--search-wrap:before{position:absolute;top:18px;right:20px;height:20px;width:20px;content:'';background-image:url(../img/mag.png);background-repeat:no-repeat}.header:after{content:'';position:absolute;background-image:url(../img/beach.jpg);background-repeat:no-repeat;background-size:cover;background-position:50% 70%;width:100%;height:100%;top:62px;-webkit-filter:blur(3px);filter:blur(4px);overflow:hidden}.nav ul{list-style:none}body,html{overflow:auto!important}.main,body,html{background-color:#fff}.main{width:60vw;margin:2rem auto}.main .more{margin:2rem;font-size:1.5rem;color:#333;text-transform:uppercase;text-align:center}.main .post{border:1px solid #ddd;border-radius:4px;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:1rem;position:relative;overflow:hidden}.main .post img{width:100%}.main .post .post-icons{position:absolute;width:100px;display:-ms-flexbox;display:flex;top:1rem;right:-1rem}.main .post .post-icons i{margin:.5rem;display:inline-block}.main .post .post-icons p{padding:0;margin:0 .5rem}.main .post .post-left,.main .post .post-right{padding:1rem}.main .post .post-right h3,.main .post .post-right p{margin:0;margin-bottom:.25rem}.main .post .post-right a{color:#bbb;text-decoration:none}footer nav{width:60vw;margin:3rem auto}footer nav ul li{font-size:1.1rem;padding:1rem;display:inline-block;list-style-type:none;text-transform:uppercase}footer nav ul li a{color:#0c9;text-decoration:none}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
